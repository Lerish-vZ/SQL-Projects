-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.products
(
    product_id smallserial,
    name character varying(20),
    price money,
    PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id smallserial,
    name character varying(15),
    PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.cart
(
    product_id smallint,
    qty integer,
    PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.order_header
(
    order_id smallserial,
    user_id smallint,
    order_date timestamp without time zone,
    PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.order_details
(
    order_header smallint,
    product_id smallint,
    qty smallint
);

ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT order_id FOREIGN KEY (order_header)
    REFERENCES public.order_header (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

-------------------------------insert--------------------------------------------------

INSERT INTO products(name, price)
VALUES 
	('Coke', 19.99),
	('Chips', 14.99),
	('Bar One', 11.99),
	('Bratz', 2.99),
	('Icy', 9.99),
	('Sprite', 18.99),
	('Knickerball', 4.99),
	('Sour Worms', 7.95),
	('Heart Sweet', 0.50),
	('Chappie', 2.60);

SELECT * FROM products;

INSERT INTO users(name)
VALUES 
	('Amanda'),
	('Julio'),
	('Megan'),
	('Peter');
	
SELECT * FROM users;

-------------------------------Add items function-------------------------------------------------

CREATE OR REPLACE FUNCTION add(pro_id smallint)
RETURNS void AS $$
BEGIN
	IF EXISTS(SELECT * FROM cart WHERE product_id = pro_id)
		THEN 
			UPDATE cart SET qty = qty + 1 WHERE product_id = pro_id;
		ELSE 
			INSERT INTO cart(product_id, qty) VALUES (pro_id, 1);
	END IF; 
END;
$$ LANGUAGE plpgsql;

-------------------------------Remove items function-------------------------------------------------

CREATE OR REPLACE FUNCTION remove(pro_id smallint)
RETURNS void AS $$
BEGIN 
	IF EXISTS(SELECT * FROM cart WHERE product_id = pro_id)
		THEN 
			IF EXISTS(SELECT * FROM cart WHERE qty > 1 AND product_id = pro_id)
				THEN 
					UPDATE cart SET qty = qty - 1 WHERE product_id = pro_id;
			ELSE 
				DELETE FROM cart WHERE product_id = pro_id;
			END IF;
	END IF; 
END; 
$$ LANGUAGE plpgsql;

SELECT add(CAST (2 AS smallint));

SELECT * FROM cart;

SELECT remove(CAST (1 AS smallint));

------------------------------Checkout, ORDER_DETAILS-------------------------------------------------

CREATE OR REPLACE FUNCTION checkout(u_id smallint)
RETURNS void AS $$
BEGIN 
	INSERT INTO order_header (user_id, order_date) 
	VALUES (u_id, (SELECT localtimestamp));
	
	INSERT INTO order_details (product_id, qty)
	SELECT product_id, qty FROM cart;
	
	UPDATE order_details 
	SET order_header = 1
	WHERE order_header IS NULL;
	
	DELETE FROM cart WHERE product_id > 0;
END;
$$ LANGUAGE plpgsql;

SELECT checkout(CAST( 1 AS smallint));

SELECT * FROM order_header;

SELECT * FROM order_details;

SELECT * FROM cart;
---------------------------------------------------------------------------------------

SELECT add(CAST (1 AS smallint));
SELECT add(CAST (3 AS smallint));
SELECT add(CAST (8 AS smallint)); --x5

SELECT remove(CAST (8 AS smallint));

---------------------------------------------------------------------------------------

DELETE FROM order_header;
DELETE FROM order_details;
DELETE FROM cart;

---------------------------------------------------------------------------------------

-- CREATE OR REPLACE FUNCTION print()
-- RETURNS void AS $$
-- BEGIN 
-- 	IF ((SELECT count(*) FROM order_header) > 1 AND (SELECT count(*) FROM order_details) > 1)
-- 	THEN 
-- 		SELECT * 
-- 		FROM order_header JOIN order_details
-- 		ON order_header.order_id = order_details.order_header;
-- 	END IF;
-- END;
-- $$ LANGUAGE plpgsql;

-- SELECT print();


DROP TABLE cart;
DROP TABLE products;
DROP TABLE users;
DROP TABLE order_details;
DROP TABLE order_header;

